1)Remove duplicates-->For single pass only
                      You can use stack
2)For multipass-->you have to use Recursion to remove duplicates
3)Problems involving balanced parentheses, brackets, or other delimiters 
  often require stack-based or stack-like approaches.
4)Look for problems where you need to check the validity or balance of elements, 
  such as parentheses, braces, or tags, in a given string or sequence.
5)Problem involves nested or hierarchial approach
6)find the length or count of valid or balanced subsequences within a given input.
---------------------------------------------------------------------------------
1)Balanced Parenthesis
 {{{{-->even->No of Reversal-->to make balanced 4/2=2-->n/2+n%2
 }}}}-->even-->same as above
 }}} + {-->left+right-->even-->we can balance-->reversal-->left/2+left%2+right/2+right%2;
 {{{+}-->same as above
 If sum of both is odd-->It will never balance
Here also---->Stack is used to check for the balanced parenthesis
-------------------------------------------------------------------------------
